{"version":3,"file":"PendingAirdropRecord.js","sources":["../../src/token/PendingAirdropRecord.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.PendingAirdropRecord} HieroProto.proto.PendingAirdropRecord\n */\n\nimport Long from \"long\";\nimport PendingAirdropId from \"./PendingAirdropId.js\";\n\nexport default class PendingAirdropRecord {\n    /**\n     * @param {object} props\n     * @param {PendingAirdropId} props.airdropId\n     * @param {Long} props.amount\n     */\n    constructor(props) {\n        this.airdropId = props.airdropId;\n        this.amount = props.amount;\n    }\n\n    /**\n     * @returns {HieroProto.proto.PendingAirdropRecord}\n     */\n    toBytes() {\n        return {\n            pendingAirdropId: this.airdropId.toBytes(),\n            pendingAirdropValue: {\n                amount: this.amount,\n            },\n        };\n    }\n\n    /**\n     * @param {HieroProto.proto.PendingAirdropRecord} pb\n     * @returns {PendingAirdropRecord}\n     */\n    static fromBytes(pb) {\n        if (pb.pendingAirdropId == null) {\n            throw new Error(\"pendingAirdropId is required\");\n        }\n\n        const airdropId = PendingAirdropId.fromBytes(pb.pendingAirdropId);\n        const amount = pb.pendingAirdropValue?.amount;\n\n        return new PendingAirdropRecord({\n            airdropId: airdropId,\n            amount: amount ? amount : Long.ZERO,\n        });\n    }\n}\n"],"names":["PendingAirdropRecord","constructor","props","this","airdropId","amount","toBytes","pendingAirdropId","pendingAirdropValue","fromBytes","pb","Error","PendingAirdropId","Long","ZERO"],"mappings":"yDASe,MAAMA,EAMjB,WAAAC,CAAYC,GACRC,KAAKC,UAAYF,EAAME,UACvBD,KAAKE,OAASH,EAAMG,MAC5B,CAKI,OAAAC,GACI,MAAO,CACHC,iBAAkBJ,KAAKC,UAAUE,UACjCE,oBAAqB,CACjBH,OAAQF,KAAKE,QAG7B,CAMI,gBAAOI,CAAUC,GACb,GAA2B,MAAvBA,EAAGH,iBACH,MAAM,IAAII,MAAM,gCAGpB,MAAMP,EAAYQ,EAAiBH,UAAUC,EAAGH,kBAC1CF,EAASK,EAAGF,qBAAqBH,OAEvC,OAAO,IAAIL,EAAqB,CAC5BI,UAAWA,EACXC,OAAQA,GAAkBQ,EAAKC,MAE3C"}